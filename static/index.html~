<html>
    <head>
        <title>ShareJS Tutorial</title>
        <script src="bcsocket.js"></script>             <!-- add transport -->
        <script src="webclient/share.js"></script>      <!-- ShareJS -->
	<script src="webclient/json.js"></script>
	<script type="text/javascript" src="jstree-v.pre1.0/_lib/jquery.js"></script>
	<script type="text/javascript" src="jstree-v.pre1.0/jquery.jstree.js"></script>
    </head>
    <body>
	<h3>TOC Elements</h3>
	<div id="toc-items">
		<ul>
			<li>
				<a href="#">Stack Overflow</a>
			</li>			
			<li>
				<a href="#">Ask Ubuntu</a>
			</li>
			<li>
				<a href="#">Chapter</a>
			</li>
		</ul>
	</div>
	<h3>TOC</h3>
	<div id="toc">
		<ul id="tocTopLevel">

		</ul>
	</div>

        <script>
		var treeHtmlElementsToTocnodes = {}; 
		var nodeCount = 0;
	
		// connect to the server
	        sharejs.open('book1', 'json', function(error, doc) {
			// this function is called once the connection is opened
			if (error) {
				console.log("ERROR:", error);
				return;
			}

			var toc = doc.get();

			if (toc == null) {
				doc.set({children: [{name: "Book"}]});
			} 

			addChild(jQuery('#tocTopLevel'), toc);	

			doc.on('child op', function (path, op) {
			  	if (op == 'add') {

				} else if (op == 'move') {

				}
			});

			jQuery("#toc-items").jstree({				
				plugins : [ "themes", "html_data", "dnd" ]
			});

			jQuery("#toc").jstree({
				"crrm": { 
					"move": { 
						"always_copy": "multitree"
					}				
				},
				"dnd" : {
					"drop_target" : false,
					"drag_target" : false
				},
				plugins : [ "themes", "html_data", "crrm", "dnd" ]
			}).bind('move_node.jstree',function(event,data){

				console.log(event);
				console.log(data); 
			    	console.log('the item being dragged '+ data.rslt.o[0].id + 'target '+ data.rslt.np[0].id + ' source ' + data.rslt.op[0].id);

				//lets assume we want to roll back
			    	/*
			    		jQuery.jstree.rollback(data.rlbk);
			    		alert('this move is not allowed');
			    	*/    

				/*
					If the source is toc-items, we have just copied a new element into the toc.
					Issue an add operation to the OT server.
				*/

				var parentOfNewNode = data.rslt.np[0];
				var sourceNode = data.rslt.o[0];
				var newNode = data.rslt.oc[0];

				if (sourceNode.parentElement.parentElement == jQuery("#toc-items")[0]) {

					newNode.id = 'node' + ++nodeCount;

					for (var childIndex = 0; childIndex < newNode.parentElement.children.length; ++childIndex) {			
						if (newNode.parentElement.children[childIndex] == newNode) {
							break;
						}
					}

					if (treeHtmlElementsToTocnodes[parentOfNewNode.id].children === undefined) {
						treeHtmlElementsToTocnodes[parentOfNewNode.id].children = [];	
					}
				
					/*var newTocElement = {name: newNode.innerText.trim(), parent: treeHtmlElementsToTocnodes[parentOfNewNode.id], index: childIndex};
					treeHtmlElementsToTocnodes[parentOfNewNode.id].children.splice(childIndex, 0, newTocElement);
					treeHtmlElementsToTocnodes[newNode.id] = newTocElement;

					// notify the OT server
					var path = ['children'];
					var currentTocElemnt = newTocElement.parent;
					while (currentTocElemnt != null) {
						path.splice(0, 0, ['children', currentTocElemnt.index]);
						currentTocElemnt = currentTocElemnt.parent;	
					}

					var subdoc = doc.at(path);
					var subDocToc = subdoc.get();
					subDoc.insert(newTocElement.index, {name: newNode.innerText.trim()});*/
				}				
			});

		});

		function addChild(parent, child) {
			if (child != null && child.children != null) {
				jQuery.each(child.children, function(i, tocElement) {								
					var listItem = jQuery('<li id="node' + ++nodeCount + '">');
					var href = jQuery('<a href="#">').text(child.children[i].name);
					var unorderedList = jQuery('<ul>');
					parent.append(listItem);
					listItem.append(href);
					listItem.append(unorderedList);
				
					treeHtmlElementsToTocnodes[listItem[0].id] = child.children[i];

					addChild(unorderedList, child.children[i]);
				});
			}		
		}
        </script>
    </body>
</html>
